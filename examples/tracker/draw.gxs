; Draw track data
draw: {
	reg x %6     ; current source position in track
	reg ch %7    ; page is current page, X/channel/Y start at 0
	reg y %8
	reg page %9

	reg dstx %10  ; destination X/Y on screen where to draw
	reg dsty %11

	ld page curpage
	set y 0

	drawlinesloop:
		set ch 0

		drawchannelsloop:
			set x 0

			drawcharsloop:
				; Get address of current character
				mov x arg0
				mov ch arg1
				mov y arg2
				mov page arg3
				js pos2addr

				; Get the ASCII value of the character
				ldi arg0 arg4
				js int2hex4b

				; Get the location to draw at
				mov x arg0
				mov ch arg1
				mov y arg2
				js pos2scr

				; Draw the value at the location
				set arg0 hi(hexbuf)
				set arg1 lo(hexbuf)
				mov arg3 arg2
				mov arg4 arg3
				js print

				; Next X iteration (frequency, sustain, decay of one channel)
				add x (%0:1) x
				ltj x (%0:CHANNEL_LENGTH) drawcharsloop

			; Next channel iteration (square, sawtooth, sine, noise of one line)
			add ch (%0:1) ch
			ltj ch (%0:CHANNEL_COUNT) drawchannelsloop

		; Next line iteration (Y)
		add y (%0:1) y
		ltj y (%0:PAGE_LENGTH) drawlinesloop

	ret
}