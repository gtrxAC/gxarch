; Mouse for gxarch
; Shows mouse location and mouse buttons pressed
; Date: 2021-11-07
; Author: gtrxAC

datl main    ; set program entry point
dat 0, 0, 0  ; set screen clear color (black)
dat 0        ; doesn't support save file

xystr: dat "X: 000  Y: 000"
ldownstr: dat "Left down time: 000"
lpressstr: dat "Left pressed? 000"
rdownstr: dat "Right down time: 000"
rpressstr: dat "Right pressed? 000"
plusstr: dat "+"

addr FORMATX 0x0009        ; addresses where numbers are formatted into the strings
addr FORMATY 0x0011
addr FORMATLTIME 0x0025
addr FORMATLPRESS 0x0037
addr FORMATRTIME 0x004C
addr FORMATRPRESS 0x005F

val PRINT_CHARSPERLINE 32
val PRINT_WIDTH 4
val PRINT_HEIGHT 8
include "std/print.gxs"
include "std/int2str.gxs"
include "std/common.gxs"   ; common.gxs has MOUSE X/Y/L/R constants
include "std/mouse.gxs"

main:
	; Call updatemouse from std/mouse.gxs to update MOUSE L/R TIME/PRESS vars
	js updatemouse

	; Format mouse values into strings
	ld arg0 MOUSEX
	set arg1 hi(FORMATX)
	set arg2 lo(FORMATX)  ; mouse X position
	js int2str

	ld arg0 MOUSEY        ; mouse Y position
	set arg1 hi(FORMATY)
	set arg2 lo(FORMATY)
	js int2str

	ld arg0 MOUSELTIME        ; how many frames has mouse left button been pressed
	set arg1 hi(FORMATLTIME)
	set arg2 lo(FORMATLTIME)
	js int2str

	ld arg0 MOUSELPRESS        ; has mouse left button been released this frame
	set arg1 hi(FORMATLPRESS)
	set arg2 lo(FORMATLPRESS)
	js int2str

	ld arg0 MOUSERTIME        ; how many frames has mouse right button been pressed
	set arg1 hi(FORMATRTIME)
	set arg2 lo(FORMATRTIME)
	js int2str

	ld arg0 MOUSERPRESS        ; has mouse right button been released this frame
	set arg1 hi(FORMATRPRESS)
	set arg2 lo(FORMATRPRESS)
	js int2str

	; Draw strings
	set arg0 hi(xystr)
	set arg1 lo(xystr)
	set arg2 0
	set arg3 0
	js print

	set arg0 hi(ldownstr)
	set arg1 lo(ldownstr)
	set arg2 0
	set arg3 8
	js print

	set arg0 hi(lpressstr)
	set arg1 lo(lpressstr)
	set arg2 0
	set arg3 16
	js print

	set arg0 hi(rdownstr)
	set arg1 lo(rdownstr)
	set arg2 0
	set arg3 24
	js print

	set arg0 hi(rpressstr)
	set arg1 lo(rpressstr)
	set arg2 0
	set arg3 32
	js print

	; Draw a + character at the mouse position
	set arg0 hi(plusstr)
	set arg1 lo(plusstr)
	ld arg2 MOUSEX
	ld arg3 MOUSEY
	js print

	end
	jmp main