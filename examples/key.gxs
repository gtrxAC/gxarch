; Key for gxarch
; Saves the last pressed key and shows it on screen
; The key is also saved in SRAM (save file).
; Date: 2021-11-21
; Author: gtrxAC

dat main

string: dat "Last pressed key: 000 \" \""

addr FORMATNUM 0x0014    ; addresses of where numeric/ASCII values are
addr FORMATASCII 0x0019  ; formatted into the string

val PRINT_CHARSPERLINE 32
val PRINT_WIDTH 4
val PRINT_HEIGHT 8
.include std/common.gxs
.include std/print.gxs
.include std/int2str.gxs

main:
	reg curkey %4     ; current key being checked
	reg ispressed %5  ; is key pressed? result of key instruction (1 or 0)

	st (%0:1) SRAM_TOGGLE  ; enable SRAM

loop:
	; Reading the keyboard in gxarch is done with the key instruction.
	; There is no way to directly get which key is currently pressed, to do this
	; you have to scan every available keycode and check if it's pressed. This
	; is good for games where multiple keys may be pressed at the same time.

	key curkey ispressed   ; is current key pressed?
	cj ispressed keyfound  ; then store it in SRAM

	add curkey (%1:1) curkey       ; next key
	.ltj curkey (%1:K_COUNT) loop

loopend:
	ld arg0 SRAM            ; update string with last key's numeric value
	set arg1 hi(FORMATNUM)
	set arg2 lo(FORMATNUM)
	js int2str

	st arg0 FORMATASCII  ; update string with last key's ASCII value

	set arg0 hi(string)  ; print string on screen
	set arg1 lo(string)
	set arg2 0
	set arg3 0
	js print

	end           ; draw frame and loop
	set curkey 0
	jmp loop

keyfound:
	st curkey SRAM
	jmp loopend