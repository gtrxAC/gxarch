; Key for gxarch
; Saves the last pressed key and shows it on screen
; The key is also saved in SRAM (save file).
; Date: 2021-11-21
; Author: gtrxAC

datl main    ; set program entry point
dat 0, 0, 0  ; set screen clear color (black)
dat 1        ; supports save file

string: dat "Last pressed key: 000 \" \""

addr FORMATNUM 0x0018    ; addresses of where numeric/ASCII values are
addr FORMATASCII 0x001D  ; formatted into the string

val PRINT_CHARSPERLINE 32
val PRINT_WIDTH 4
val PRINT_HEIGHT 8
include "std/common.gxs"
include "std/print.gxs"
include "std/int2str.gxs"

main:
	reg curkey %4     ; current key being checked
	reg ispressed %5  ; is key pressed? result of key instruction (1 or 0)

loop:
	; Reading the keyboard in gxarch is done with the key instruction.
	; There is no way to directly get which key is currently pressed, to do this
	; you have to scan every available keycode and check if it's pressed. This
	; is good for games where multiple keys may be pressed at the same time.

	; If current key is pressed, store it in SRAM
	key curkey ispressed
	cj ispressed keyfound

	; Next iteration
	add curkey (%1:1) curkey
	ltj curkey (%1:K_COUNT) loop

loopend:
	; Update string with last key's numeric value
	ld arg0 SRAM
	set arg1 hi(FORMATNUM)
	set arg2 lo(FORMATNUM)
	js int2str

	; Update string with last key's ASCII value
	st arg0 FORMATASCII

	; Print string on screen
	set arg0 hi(string)
	set arg1 lo(string)
	set arg2 0
	set arg3 0
	js print

	; Draw frame and end loop
	end
	set curkey 0
	jmp loop

keyfound:
	st curkey SRAM
	jmp loopend